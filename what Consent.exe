In the interconnected host of the systems, whenever the user tries to execute an image that requests administrative rights causes the application information service (AIS) (img_path:%SystemRoot%\system32\appinfo.dll) to launch,
which runs inside a standard service host process called "svchost.exe", svchost.exe causes to launch the consent.exe (img_path:%systemroot%\system32\consent.exe) the execution flow then triggers the launch of the bitmap image that is the elevation dialogue box containing the information about the executable.

If an image is a Windows component digitally signed (by Microsoft or another entity), the dialog box displays a light blue stripe across the top, (the distinction between Microsoft signed images and other signers has been removed in Windows 10). If the image is unsigned, the stripe becomes yellow, and the prompt stresses the unknown origin of the image. The elevation dialog box shows the image's icon, description, and publisher for digitally signed images, but it shows only the file name and "Publisher: Unknown" for unsigned images. This difference makes it harder for malware to mimic the appearance of legitimate software. The Show More Details link at the bottom of the dialog box expands it to show the command line that will be passed to the executable if it launches.

If a user declines an elevation, Windows returns an access-denied error to the process that initiated the launch.
When a user agrees to an elevation by either entering administrator credentials or clicking Yes, AppInfoServices(AIS) calls CreateProcessAsUser to launch the process with the appropriate administrative identity. Although AIS is technically the parent of the elevated process, AIS uses new support in the CreateProcessASUser API that sets the process's parent process ID to that of the process that originally launched it. That's why elevated processes don't appear as children of the AIS service-hosting process in process trees.
